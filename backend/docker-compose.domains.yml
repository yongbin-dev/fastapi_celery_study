version: "3.8"

services:
  app-base:
    build:
      context: .
      dockerfile: Dockerfile.cpu
      args:
        - DOMAIN_EXTRA=prod # 기본 프로덕션 의존성만 설치
    container_name: fastapi-app-base
    ports:
      - "35050:5050"
    environment:
      - TZ=Asia/Seoul
      - DOMAIN=base
      - ENVIRONMENT=production
    volumes:
      - ./app:/app/app
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - app-network

  app-llm:
    build:
      context: .
      dockerfile: Dockerfile.gpu
      args:
        - DOMAIN_EXTRA=llm # LLM 관련 의존성 추가 설치
    container_name: fastapi-app-llm
    ports:
      - "35051:5050"
    environment:
      - TZ=Asia/Seoul
      - DOMAIN=llm
      - DATABASE_URL=postgresql+asyncpg://sa:1@postgres-server:5432/study_db
      - REDIS_URL=redis://redis-server:6379/0
      - CELERY_BROKER_URL=redis://redis-server:6379/1
      - CELERY_RESULT_BACKEND=redis://redis-server:6379/2
    volumes:
      - ./app:/app/app
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - app-network
    runtime: nvidia

  app-ocr:
    build:
      context: .
      dockerfile: Dockerfile.gpu
      args:
        - DOMAIN_EXTRA=ocr # OCR 관련 의존성 추가 설치
    container_name: fastapi-app-ocr
    ports:
      - "35052:5050"
    environment:
      - TZ=Asia/Seoul
      - DOMAIN=ocr
      - DATABASE_URL=postgresql+asyncpg://sa:1@postgres-server:5432/study_db
      - REDIS_URL=redis://redis-server:6379/0
      - CELERY_BROKER_URL=redis://redis-server:6379/1
      - CELERY_RESULT_BACKEND=redis://redis-server:6379/2
    volumes:
      - ./app:/app/app
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - app-network
    runtime: nvidia

networks:
  app-network:
    external: true
