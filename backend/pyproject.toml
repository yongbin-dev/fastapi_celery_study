[tool.poetry]
name = "fastapi-celery-multi-domain"
version = "0.2.0"
description = "팀별 도메인 기반 FastAPI + Celery 마이크로서비스"
authors = ["albin <ybkim@aipim.io>"]
readme = "README.md"
package-mode = false

[[tool.poetry.source]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[[tool.poetry.source]]
name = "pytorch-cuda"
url = "https://download.pytorch.org/whl/cu118"
priority = "explicit"

# ===== 공통 필수 의존성 =====
[tool.poetry.dependencies]
python = "~3.12"

# FastAPI 및 웹 프레임워크
fastapi = "^0.109.0"
uvicorn = {extras = ["standard"], version = "^0.27.0"}
python-multipart = "^0.0.6"

# 비동기 처리
celery = "^5.5.3"
redis = "^5.0.0"

# 데이터베이스
sqlalchemy = "^2.0.43"
alembic = "^1.16.5"
asyncpg = "^0.30.0"
psycopg2-binary = "^2.9.10"
psycopg = "^3.2.10"
greenlet = "^3.2.4"

# 데이터 검증
pydantic = "^2.11.9"
pydantic-settings = "^2.1.0"

# 유틸리티
python-dotenv = "^1.0.0"
httpx = "^0.28.1"
psutil = "^7.0.0"

# 로깅
python-json-logger = "^2.0.7"

# Kafka (선택적 - 필요시 주석 해제)
aiokafka = "^0.10.0"

# ===== 개발 환경 의존성 =====
[tool.poetry.group.dev]
optional = false

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.12.1"
flake8 = "^7.0.0"
mypy = "^1.8.0"
isort = "^5.13.2"
pre-commit = "^3.6.0"
ipython = "^8.19.0"
ipdb = "^0.13.13"
aiosqlite = "^0.21.0"

# ===== 운영 환경 의존성 =====
[tool.poetry.group.prod]
optional = true

[tool.poetry.group.prod.dependencies]
gunicorn = "^21.2.0"
flower = "^2.0.1"
sentry-sdk = "^1.0.0"
cryptography = "^41.0.7"

# ===== LLM 도메인 의존성 =====
[tool.poetry.group.llm]
optional = true

[tool.poetry.group.llm.dependencies]
torch = "^2.2.0"
torchvision = "^0.17.0"
transformers = "^4.40.0"
tokenizers = "^0.15.0"
sentencepiece = "^0.1.99"
sentence-transformers = "^2.2.2"
huggingface-hub = "^0.23.0"
langchain = "^0.3.0"
langchain-ollama = "^0.3.8"
# openai = "^1.6.0"  # OpenAI API 사용 시 주석 해제

# ===== OCR 도메인 의존성 =====
[tool.poetry.group.ocr]
optional = true

[tool.poetry.group.ocr.dependencies]
paddleocr = "^2.7.0"
paddlepaddle = "^2.5.2"
opencv-python = "^4.9.0"
Pillow = "^10.2.0"
python-Levenshtein = "^0.23.0"
# easyocr = "^1.7.1"  # EasyOCR 사용 시 주석 해제
# pytesseract = "^0.3.10"  # Tesseract 사용 시 주석 해제

# ===== Vision 도메인 의존성 =====
[tool.poetry.group.vision]
optional = true

[tool.poetry.group.vision.dependencies]
ultralytics = "^8.1.0"
opencv-python = "^4.9.0"
Pillow = "^10.2.0"
# torch와 torchvision은 LLM과 공유 가능하지만 별도 설치도 가능
# torch = "^2.2.0"
# torchvision = "^0.17.0"

# ===== Audio 도메인 의존성 (향후 확장) =====
[tool.poetry.group.audio]
optional = true

[tool.poetry.group.audio.dependencies]
# librosa = "^0.10.1"
# soundfile = "^0.12.1"
# pydub = "^0.25.1"
# torch = "^2.2.0"
# torchaudio = "^2.1.0"

# ===== 코드 포맷팅 설정 =====
[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | \.mypy_cache
  | \.pytest_cache
  | __pycache__
  | migrations
)/
'''

# ===== 타입 검사 설정 =====
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

# ===== 테스트 설정 =====
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--verbose",
    "--cov=app",
    "--cov-report=html",
    "--cov-report=term-missing",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "domain_llm: LLM 도메인 테스트",
    "domain_ocr: OCR 도메인 테스트",
    "domain_vision: Vision 도메인 테스트",
]

# ===== import 정렬 설정 =====
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true

# ===== Build 설정 =====
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"