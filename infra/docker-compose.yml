services:
  redis:
    container_name: redis-server
    image: redis:alpine
    ports:
      - "6379:6379"
    environment:
      - TZ=Asia/Seoul
    networks:
      - app-network
    restart: unless-stopped

  postgres:
    container_name: postgres-server
    image: postgres:15-alpine
    environment:
      TZ: Asia/Seoul
      PGTZ: Asia/Seoul
      POSTGRES_DB: study_db
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: "1"
      POSTGRES_HOST_AUTH_METHOD: trust
    restart: unless-stopped
    ports:
      - "15432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sa -d study_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  nginx-cpu-gateway:
    image: nginx:alpine
    container_name: api-cpu-gateway
    ports:
      - "8000:8000"
    volumes:
      - ./nginx/cpu/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
    # depends_on:
    # - app-base
    # - ocr-model-server
    # - app-ocr-cpu  # 모델 서버로 대체
    # - app-ocr-gpu  # 모델 서버로 대체
    # - app-llm
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    external: true
