"""initial_migration

Revision ID: ec1ed46d8cec
Revises: 
Create Date: 2025-09-10 15:39:25.324226

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ec1ed46d8cec'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pipeline_executions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('execution_id', sa.String(length=255), nullable=True, comment='Celery 실행 ID'),
    sa.Column('pipeline_id', sa.String(length=255), nullable=True, comment='파이프라인 템플릿 ID'),
    sa.Column('status', sa.String(length=255), nullable=True, comment='전체 파이프라인 상태'),
    sa.Column('current_step', sa.Integer(), nullable=True, comment='현재 실행 중인 단계 번호'),
    sa.Column('is_ready', sa.Boolean(), nullable=True, comment='파이프라인 준비 완료 상태'),
    sa.Column('overall_progress', sa.Integer(), nullable=True, comment='전체 진행률 (0-100)'),
    sa.Column('error_traceback', sa.Text(), nullable=True, comment='에러 트레이스백'),
    sa.Column('stages_json', sa.Text(), nullable=True, comment='단계 정보 JSON (deprecated, pipeline_stages 테이블 사용)'),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, comment='생성 시간 (서울)'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False, comment='수정 시간 (서울)'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pipeline_executions_execution_id'), 'pipeline_executions', ['execution_id'], unique=True)
    op.create_index(op.f('ix_pipeline_executions_id'), 'pipeline_executions', ['id'], unique=False)
    op.create_index(op.f('ix_pipeline_executions_pipeline_id'), 'pipeline_executions', ['pipeline_id'], unique=False)
    op.create_table('pipeline_stages',
    sa.Column('id', sa.Integer(), nullable=False, comment='Stage ID'),
    sa.Column('pipeline_execution_id', sa.Integer(), nullable=False, comment='PipelineExecution ID (외래키)'),
    sa.Column('stage_number', sa.Integer(), nullable=False, comment='Stage 순서 (1, 2, 3, 4)'),
    sa.Column('stage_name', sa.String(length=100), nullable=False, comment='Stage 이름'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='Stage 상태 (pending, running, completed, failed)'),
    sa.Column('progress', sa.Integer(), nullable=False, comment='진행률 (0-100)'),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True, comment='Stage 시작 시간'),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True, comment='Stage 완료 시간'),
    sa.Column('error_message', sa.Text(), nullable=True, comment='에러 메시지'),
    sa.Column('stage_metadata', sa.JSON(), nullable=True, comment='Stage 관련 메타데이터'),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, comment='생성 시간 (서울)'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False, comment='수정 시간 (서울)'),
    sa.ForeignKeyConstraint(['pipeline_execution_id'], ['pipeline_executions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='파이프라인 단계별 진행 상황'
    )
    op.drop_index(op.f('ix_task_info_id'), table_name='task_info')
    op.drop_index(op.f('ix_task_info_pipeline_id'), table_name='task_info')
    op.drop_index(op.f('ix_task_info_task_id'), table_name='task_info')
    op.drop_table('task_info')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task_info',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='Celery 태스크 ID'),
    sa.Column('status', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='태스크 상태'),
    sa.Column('traceback', sa.TEXT(), autoincrement=False, nullable=True, comment='트레이스백'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='생성 시간 (서울)'),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='수정 시간 (서울)'),
    sa.Column('step', sa.INTEGER(), autoincrement=False, nullable=True, comment='현재 태스크의 단계 번호'),
    sa.Column('ready', sa.BOOLEAN(), autoincrement=False, nullable=True, comment='태스크 준비 상태'),
    sa.Column('progress', sa.INTEGER(), autoincrement=False, nullable=True, comment='진행률 (0-100)'),
    sa.Column('pipeline_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='파이프라인 ID'),
    sa.Column('stages', sa.TEXT(), autoincrement=False, nullable=True, comment='태스크 단계 정보'),
    sa.PrimaryKeyConstraint('id', name=op.f('task_info_pkey'))
    )
    op.create_index(op.f('ix_task_info_task_id'), 'task_info', ['task_id'], unique=True)
    op.create_index(op.f('ix_task_info_pipeline_id'), 'task_info', ['pipeline_id'], unique=False)
    op.create_index(op.f('ix_task_info_id'), 'task_info', ['id'], unique=False)
    op.drop_table('pipeline_stages')
    op.drop_index(op.f('ix_pipeline_executions_pipeline_id'), table_name='pipeline_executions')
    op.drop_index(op.f('ix_pipeline_executions_id'), table_name='pipeline_executions')
    op.drop_index(op.f('ix_pipeline_executions_execution_id'), table_name='pipeline_executions')
    op.drop_table('pipeline_executions')
    # ### end Alembic commands ###
