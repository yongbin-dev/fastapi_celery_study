"""Update task_info table structure for celery signals

Revision ID: 7f70f9215105
Revises: c98d77475a15
Create Date: 2025-09-03 15:25:43.642180

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7f70f9215105'
down_revision: Union[str, Sequence[str], None] = 'c98d77475a15'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('task_info', sa.Column('task_id', sa.String(length=255), nullable=False, comment='Celery 태스크 ID'))
    op.add_column('task_info', sa.Column('args', sa.Text(), nullable=True, comment='태스크 인자'))
    op.add_column('task_info', sa.Column('kwargs', sa.Text(), nullable=True, comment='태스크 키워드 인자'))
    op.add_column('task_info', sa.Column('error_message', sa.Text(), nullable=True, comment='에러 메시지'))
    op.add_column('task_info', sa.Column('retry_count', sa.Integer(), nullable=True, comment='재시도 횟수'))
    op.add_column('task_info', sa.Column('completed_time', sa.DateTime(timezone=True), nullable=True, comment='태스크 완료 시간'))
    op.alter_column('task_info', 'status',
               existing_type=sa.VARCHAR(length=255),
               comment='태스크 상태',
               existing_nullable=False)
    op.alter_column('task_info', 'task_name',
               existing_type=sa.VARCHAR(length=255),
               comment='태스크 이름',
               existing_nullable=False)
    op.alter_column('task_info', 'result',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               nullable=True,
               comment='태스크 결과')
    op.alter_column('task_info', 'traceback',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.Text(),
               nullable=True,
               comment='트레이스백')
    op.alter_column('task_info', 'task_time',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='태스크 시작 시간',
               existing_comment='생성 시간',
               existing_nullable=False)
    op.create_index(op.f('ix_task_info_task_id'), 'task_info', ['task_id'], unique=True)
    op.drop_column('task_info', 'date_done')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('task_info', sa.Column('date_done', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_task_info_task_id'), table_name='task_info')
    op.alter_column('task_info', 'task_time',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='생성 시간',
               existing_comment='태스크 시작 시간',
               existing_nullable=False)
    op.alter_column('task_info', 'traceback',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               nullable=False,
               comment=None,
               existing_comment='트레이스백')
    op.alter_column('task_info', 'result',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=255),
               nullable=False,
               comment=None,
               existing_comment='태스크 결과')
    op.alter_column('task_info', 'task_name',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='태스크 이름',
               existing_nullable=False)
    op.alter_column('task_info', 'status',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='태스크 상태',
               existing_nullable=False)
    op.drop_column('task_info', 'completed_time')
    op.drop_column('task_info', 'retry_count')
    op.drop_column('task_info', 'error_message')
    op.drop_column('task_info', 'kwargs')
    op.drop_column('task_info', 'args')
    op.drop_column('task_info', 'task_id')
    # ### end Alembic commands ###
