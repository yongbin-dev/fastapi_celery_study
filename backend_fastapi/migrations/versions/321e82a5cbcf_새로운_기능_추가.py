"""새로운 기능 추가

Revision ID: 321e82a5cbcf
Revises: e356288c2614
Create Date: 2025-09-11 13:20:27.344199

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '321e82a5cbcf'
down_revision: Union[str, Sequence[str], None] = 'e356288c2614'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chain_executions',
    sa.Column('id', sa.Integer(), nullable=False, comment='고유 식별자'),
    sa.Column('chain_id', sa.UUID(), nullable=False, comment='체인 고유 ID'),
    sa.Column('chain_name', sa.String(length=255), nullable=False, comment='체인 이름 (예: user_signup_workflow)'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='체인 실행 상태'),
    sa.Column('total_tasks', sa.Integer(), nullable=False, comment='체인 내 총 작업 수'),
    sa.Column('completed_tasks', sa.Integer(), nullable=False, comment='완료된 작업 수'),
    sa.Column('failed_tasks', sa.Integer(), nullable=False, comment='실패한 작업 수'),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True, comment='시작 시간'),
    sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True, comment='완료 시간'),
    sa.Column('initiated_by', sa.String(length=100), nullable=True, comment='시작한 사용자/시스템'),
    sa.Column('input_data', postgresql.JSON(astext_type=sa.Text()), nullable=True, comment='입력 데이터 (JSON)'),
    sa.Column('final_result', postgresql.JSON(astext_type=sa.Text()), nullable=True, comment='최종 결과 (JSON)'),
    sa.Column('error_message', sa.Text(), nullable=True, comment='오류 메시지'),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, comment='생성 시간 (서울)'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False, comment='수정 시간 (서울)'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_chain_name_status', 'chain_executions', ['chain_name', 'status'], unique=False)
    op.create_index('idx_chain_status_created', 'chain_executions', ['status', 'created_at'], unique=False)
    op.create_index(op.f('ix_chain_executions_chain_id'), 'chain_executions', ['chain_id'], unique=True)
    op.create_index(op.f('ix_chain_executions_chain_name'), 'chain_executions', ['chain_name'], unique=False)
    op.create_index(op.f('ix_chain_executions_status'), 'chain_executions', ['status'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False, comment='생성 시간 (서울)'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False, comment='수정 시간 (서울)'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.alter_column('task_logs', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               comment='생성 시간 (서울)',
               existing_comment='레코드 생성 시간')
    op.alter_column('task_logs', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               comment='수정 시간 (서울)',
               existing_comment='레코드 수정 시간')
    op.drop_index(op.f('ix_task_logs_created_at'), table_name='task_logs')
    op.alter_column('task_metadata', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               comment='생성 시간 (서울)',
               existing_comment='레코드 생성 시간')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('task_metadata', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               comment='레코드 생성 시간',
               existing_comment='생성 시간 (서울)')
    op.create_index(op.f('ix_task_logs_created_at'), 'task_logs', ['created_at'], unique=False)
    op.alter_column('task_logs', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               comment='레코드 수정 시간',
               existing_comment='수정 시간 (서울)')
    op.alter_column('task_logs', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               comment='레코드 생성 시간',
               existing_comment='생성 시간 (서울)')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_chain_executions_status'), table_name='chain_executions')
    op.drop_index(op.f('ix_chain_executions_chain_name'), table_name='chain_executions')
    op.drop_index(op.f('ix_chain_executions_chain_id'), table_name='chain_executions')
    op.drop_index('idx_chain_status_created', table_name='chain_executions')
    op.drop_index('idx_chain_name_status', table_name='chain_executions')
    op.drop_table('chain_executions')
    # ### end Alembic commands ###
