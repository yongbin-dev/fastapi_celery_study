"""새로운 기능 추가

Revision ID: 0d55c979103c
Revises: 7f70f9215105
Create Date: 2025-09-03 15:48:03.125482

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0d55c979103c'
down_revision: Union[str, Sequence[str], None] = '7f70f9215105'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.String(length=255), nullable=False, comment='Celery 태스크 ID'),
    sa.Column('status', sa.String(length=255), nullable=False, comment='태스크 상태'),
    sa.Column('task_name', sa.String(length=255), nullable=False, comment='태스크 이름'),
    sa.Column('args', sa.Text(), nullable=True, comment='태스크 인자'),
    sa.Column('kwargs', sa.Text(), nullable=True, comment='태스크 키워드 인자'),
    sa.Column('result', sa.Text(), nullable=True, comment='태스크 결과'),
    sa.Column('error_message', sa.Text(), nullable=True, comment='에러 메시지'),
    sa.Column('traceback', sa.Text(), nullable=True, comment='트레이스백'),
    sa.Column('retry_count', sa.Integer(), nullable=True, comment='재시도 횟수'),
    sa.Column('task_time', sa.DateTime(timezone=True), nullable=False, comment='태스크 시작 시간'),
    sa.Column('completed_time', sa.DateTime(timezone=True), nullable=True, comment='태스크 완료 시간'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='생성 시간'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='수정 시간'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_info_id'), 'task_info', ['id'], unique=False)
    op.create_index(op.f('ix_task_info_task_id'), 'task_info', ['task_id'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='생성 시간'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='수정 시간'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('worker',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('worker_name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='생성 시간'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='수정 시간'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_worker_id'), 'worker', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_worker_id'), table_name='worker')
    op.drop_table('worker')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_task_info_task_id'), table_name='task_info')
    op.drop_index(op.f('ix_task_info_id'), table_name='task_info')
    op.drop_table('task_info')
    # ### end Alembic commands ###
